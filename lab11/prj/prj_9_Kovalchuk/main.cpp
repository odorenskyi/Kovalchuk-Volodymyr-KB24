#include "struct_type_project_9.h"
#include <iostream>
#include <string>
#include <limits>
#include <iomanip>

using namespace std;

// –§–∞–π–ª–æ–≤—ñ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∏
const string REGISTRY_DATA_FILE = "educational_registry.dat";
const string REGISTRY_BACKUP_FILE = "educational_backup.dat";

// –î–µ–∫–ª–∞—Ä–∞—Ü—ñ—ó —Ñ—É–Ω–∫—Ü—ñ–π
void printMainMenu();
int getUserMenuChoice();
void waitForUserInput();
void displayProgramHeader();
void displayProgramFooter();
bool confirmAction(const string& message);

int main() {
    // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–æ–Ω—Å–æ–ª—ñ
    system("chcp 65001 > nul");
    system("cls");

    EducationalInstitution* mainRegistry = nullptr;
    int userChoice;
    bool programRunning = true;

    // –ü–æ—á–∞—Ç–∫–æ–≤–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
    displayProgramHeader();
    cout << endl;
    cout << "‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê" << endl;
    cout << "‚îÇ        –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø –°–ò–°–¢–ï–ú–ò        ‚îÇ" << endl;
    cout << "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò" << endl;
    cout << "‚è≥ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–µ—î—Å—Ç—Ä—É –∑ —Ñ–∞–π–ª—É..." << endl;

    mainRegistry = loadFromFile(REGISTRY_DATA_FILE);

    cout << "‚úÖ –°–∏—Å—Ç–µ–º–∞ —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∞!" << endl;
    waitForUserInput();

    // –û—Å–Ω–æ–≤–Ω–∏–π —Ü–∏–∫–ª –ø—Ä–æ–≥—Ä–∞–º–∏
    while (programRunning) {
        system("cls");
        displayProgramHeader();
        printMainMenu();

        userChoice = getUserMenuChoice();

        switch (userChoice) {
            case 1: {
                cout << endl;
                cout << "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó" << endl;
                cout << "‚ïë         –ü–ï–†–ï–ì–õ–Ø–î –í–°–¨–û–ì–û –†–ï–Ñ–°–¢–†–£        ‚ïë" << endl;
                cout << "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù" << endl;
                displayRegistry(mainRegistry);
                waitForUserInput();
                break;
            }

            case 2: {
                cout << endl;
                cout << "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó" << endl;
                cout << "‚ïë           –ï–ö–°–ü–û–†–¢ –£ –§–ê–ô–õ               ‚ïë" << endl;
                cout << "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù" << endl;

                string exportFileName;
                cout << "üìÅ –í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —Ñ–∞–π–ª—É –¥–ª—è –µ–∫—Å–ø–æ—Ä—Ç—É: ";
                cin.ignore();
                getline(cin, exportFileName);

                if (exportFileName.empty()) {
                    exportFileName = "educational_export.txt";
                    cout << "‚ÑπÔ∏è  –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –Ω–∞–∑–≤–∞ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º: " << exportFileName << endl;
                }

                displayRegistry(mainRegistry, exportFileName);
                waitForUserInput();
                break;
            }

            case 3: {
                cout << endl;
                cout << "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó" << endl;
                cout << "‚ïë        –î–û–î–ê–í–ê–ù–ù–Ø –ù–û–í–û–ì–û –ó–ê–ö–õ–ê–î–£        ‚ïë" << endl;
                cout << "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù" << endl;
                mainRegistry = addRecord(mainRegistry);
                waitForUserInput();
                break;
            }

            case 4: {
                cout << endl;
                cout << "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó" << endl;
                cout << "‚ïë          –ü–û–®–£–ö –ó–ê –ö–û–î–û–ú –Ñ–î–ï–ë–û          ‚ïë" << endl;
                cout << "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù" << endl;

                int searchCode;
                cout << "üîç –í–≤–µ–¥—ñ—Ç—å –∫–æ–¥ –Ñ–î–ï–ë–û –¥–ª—è –ø–æ—à—É–∫—É: ";

                while (!(cin >> searchCode) || searchCode <= 0) {
                    cout << "‚ùå –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è! –í–≤–µ–¥—ñ—Ç—å –¥–æ–¥–∞—Ç–Ω–µ —á–∏—Å–ª–æ: ";
                    cin.clear();
                    cin.ignore(numeric_limits<streamsize>::max(), '\n');
                }

                searchByCode(mainRegistry, searchCode);
                waitForUserInput();
                break;
            }

            case 5: {
                cout << endl;
                cout << "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó" << endl;
                cout << "‚ïë         –í–ò–î–ê–õ–ï–ù–ù–Ø –Ü–ó –†–ï–Ñ–°–¢–†–£           ‚ïë" << endl;
                cout << "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù" << endl;

                int deleteCode;
                cout << "üóëÔ∏è  –í–≤–µ–¥—ñ—Ç—å –∫–æ–¥ –Ñ–î–ï–ë–û –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è: ";

                while (!(cin >> deleteCode) || deleteCode <= 0) {
                    cout << "‚ùå –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è! –í–≤–µ–¥—ñ—Ç—å –¥–æ–¥–∞—Ç–Ω–µ —á–∏—Å–ª–æ: ";
                    cin.clear();
                    cin.ignore(numeric_limits<streamsize>::max(), '\n');
                }

                if (confirmAction("–í–∏ –¥—ñ–π—Å–Ω–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ —Ü–µ–π –∑–∞–ø–∏—Å?")) {
                    mainRegistry = deleteRecord(mainRegistry, deleteCode);
                }
                waitForUserInput();
                break;
            }

            case 6: {
                cout << endl;
                cout << "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó" << endl;
                cout << "‚ïë           –ó–ë–ï–†–ï–ñ–ï–ù–ù–Ø –î–ê–ù–ò–•             ‚ïë" << endl;
                cout << "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù" << endl;

                if (validateDataIntegrity(mainRegistry)) {
                    saveToFile(mainRegistry, REGISTRY_DATA_FILE);

                    if (confirmAction("–°—Ç–≤–æ—Ä–∏—Ç–∏ —Ä–µ–∑–µ—Ä–≤–Ω—É –∫–æ–ø—ñ—é?")) {
                        createBackup(mainRegistry, REGISTRY_BACKUP_FILE);
                    }
                } else {
                    cout << "‚ö†Ô∏è  –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤—ñ–¥–º—ñ–Ω–µ–Ω–æ —á–µ—Ä–µ–∑ –ø–æ–º–∏–ª–∫–∏ –≤ –¥–∞–Ω–∏—Ö!" << endl;
                }
                waitForUserInput();
                break;
            }

            case 7: {
                cout << endl;
                cout << "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó" << endl;
                cout << "‚ïë          –°–¢–ê–¢–ò–°–¢–ò–ö–ê –†–ï–Ñ–°–¢–†–£            ‚ïë" << endl;
                cout << "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù" << endl;

                int totalInstitutions = getRegistrySize(mainRegistry);

                cout << "üìä –ó–ê–ì–ê–õ–¨–ù–ê –°–¢–ê–¢–ò–°–¢–ò–ö–ê:" << endl;
                cout << "   ‚îî‚îÄ –í—Å—å–æ–≥–æ –∑–∞–∫–ª–∞–¥—ñ–≤: " << totalInstitutions << endl;

                if (totalInstitutions > 0) {
                    int stateInstitutions = 0, privateInstitutions = 0;
                    int withMilitaryDept = 0, crimUkraineInstitutions = 0, donbasUkraineInstitutions = 0;

                    EducationalInstitution* current = mainRegistry;
                    while (current != nullptr) {
                        if (current->ownershipForm.find("–î–µ—Ä–∂–∞–≤–Ω–∞") != string::npos) {
                            stateInstitutions++;
                        } else if (current->ownershipForm.find("–ü—Ä–∏–≤–∞—Ç–Ω–∞") != string::npos) {
                            privateInstitutions++;
                        }

                        if (current->militaryDepartment) withMilitaryDept++;
                        if (current->crimUkraine) crimUkraineInstitutions++;
                        if (current->donbasUkraine) donbasUkraineInstitutions++;

                        current = current->next;
                    }

                    cout << "\nüèõÔ∏è  –†–û–ó–ü–û–î–Ü–õ –ó–ê –§–û–†–ú–û–Æ –í–õ–ê–°–ù–û–°–¢–Ü:" << endl;
                    cout << "   ‚îú‚îÄ –î–µ—Ä–∂–∞–≤–Ω—ñ: " << stateInstitutions << endl;
                    cout << "   ‚îî‚îÄ –ü—Ä–∏–≤–∞—Ç–Ω—ñ: " << privateInstitutions << endl;

                    cout << "\nüéñÔ∏è  –î–û–î–ê–¢–ö–û–í–Ü –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö–ò:" << endl;
                    cout << "   ‚îú‚îÄ –ó –≤—ñ–π—Å—å–∫–æ–≤–æ—é –∫–∞—Ñ–µ–¥—Ä–æ—é: " << withMilitaryDept << endl;
                    cout << "   ‚îú‚îÄ –û–¶ '–ö—Ä–∏–º-–£–∫—Ä–∞—ó–Ω–∞': " << crimUkraineInstitutions << endl;
                    cout << "   ‚îî‚îÄ –û–¶ '–î–æ–Ω–±–∞—Å-–£–∫—Ä–∞—ó–Ω–∞': " << donbasUkraineInstitutions << endl;
                }
                waitForUserInput();
                break;
            }

            case 0: {
                cout << endl;
                cout << "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó" << endl;
                cout << "‚ïë        –ó–ê–í–ï–†–®–ï–ù–ù–Ø –†–û–ë–û–¢–ò               ‚ïë" << endl;
                cout << "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù" << endl;

                cout << "üíæ –í–∏–∫–æ–Ω—É—î—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è..." << endl;
                if (validateDataIntegrity(mainRegistry)) {
                    autoSave(mainRegistry, REGISTRY_DATA_FILE);
                    cout << "‚úÖ –î–∞–Ω—ñ –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!" << endl;
                } else {
                    cout << "‚ö†Ô∏è  –£–í–ê–ì–ê: –ó–Ω–∞–π–¥–µ–Ω–æ –ø–æ–º–∏–ª–∫–∏ –≤ –¥–∞–Ω–∏—Ö!" << endl;
                    if (confirmAction("–ó–±–µ—Ä–µ–≥—Ç–∏ –Ω–µ–∑–≤–∞–∂–∞—é—á–∏ –Ω–∞ –ø–æ–º–∏–ª–∫–∏?")) {
                        saveToFile(mainRegistry, REGISTRY_DATA_FILE);
                    }
                }

                cout << "üßπ –û—á–∏—â–µ–Ω–Ω—è –ø–∞–º'—è—Ç—ñ..." << endl;
                clearRegistry(mainRegistry);

                displayProgramFooter();
                programRunning = false;
                break;
            }

            default: {
                cout << "‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä! –ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–æ–≤—É." << endl;
                waitForUserInput();
                break;
            }
        }
    }

    return 0;
}

/**
 * –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é –ø—Ä–æ–≥—Ä–∞–º–∏
 */
void printMainMenu() {
    cout << endl;
    cout << "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó" << endl;
    cout << "‚ïë                        –ì–û–õ–û–í–ù–ï –ú–ï–ù–Æ                          ‚ïë" << endl;
    cout << "‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£" << endl;
    cout << "‚ïë 1Ô∏è –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –≤–µ—Å—å —Ä–µ—î—Å—Ç—Ä –Ω–∞ –µ–∫—Ä–∞–Ω—ñ                         ‚ïë" << endl;
    cout << "‚ïë 2Ô∏è –ï–∫—Å–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ —Ä–µ—î—Å—Ç—Ä —É —Ç–µ–∫—Å—Ç–æ–≤–∏–π —Ñ–∞–π–ª                      ‚ïë" << endl;
    cout << "‚ïë 3Ô∏è –î–æ–¥–∞—Ç–∏ –Ω–æ–≤–∏–π –∑–∞–∫–ª–∞–¥ –¥–æ —Ä–µ—î—Å—Ç—Ä—É                            ‚ïë" << endl;
    cout << "‚ïë 4Ô∏è –ó–Ω–∞–π—Ç–∏ –∑–∞–∫–ª–∞–¥ –∑–∞ –∫–æ–¥–æ–º –Ñ–î–ï–ë–û                              ‚ïë" << endl;
    cout << "‚ïë 5Ô∏è –í–∏–¥–∞–ª–∏—Ç–∏ –∑–∞–∫–ª–∞–¥ –∑ —Ä–µ—î—Å—Ç—Ä—É                                 ‚ïë" << endl;
    cout << "‚ïë 6Ô∏è –ó–±–µ—Ä–µ–≥—Ç–∏ —Ä–µ—î—Å—Ç—Ä —É —Ñ–∞–π–ª                                    ‚ïë" << endl;
    cout << "‚ïë 7Ô∏è –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ—î—Å—Ç—Ä—É                            ‚ïë" << endl;
    cout << "‚ïë 0Ô∏è –ó–∞–≤–µ—Ä—à–∏—Ç–∏ —Ä–æ–±–æ—Ç—É –ø—Ä–æ–≥—Ä–∞–º–∏                                 ‚ïë" << endl;
    cout << "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù" << endl;
}

/**
 * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –≤–∏–±–æ—Ä—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –≤–∞–ª—ñ–¥–∞—Ü—ñ—î—é
 */
int getUserMenuChoice() {
    int choice;
    cout << "‚û§ –í–∞—à –≤–∏–±—ñ—Ä: ";

    while (!(cin >> choice)) {
        cout << "‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω—è! –í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ: ";
        cin.clear();
        cin.ignore(numeric_limits<streamsize>::max(), '\n');
    }

    return choice;
}

/**
 * –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–ª–∞–≤—ñ—à—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º
 */
void waitForUserInput() {
    cout << "\n‚è∏Ô∏è  –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter –¥–ª—è –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è...";
    cin.ignore(numeric_limits<streamsize>::max(), '\n');
    cin.get();
}

/**
 * –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–∏
 */
void displayProgramHeader() {
    cout << "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó" << endl;
    cout << "‚ïë                 –ï–õ–ï–ö–¢–†–û–ù–ù–ê –°–ò–°–¢–ï–ú–ê –£–ü–†–ê–í–õ–Ü–ù–ù–Ø –†–ï–Ñ–°–¢–†–û–ú                    ‚ïë" << endl;
    cout << "‚ïë                        –°–£–ë'–Ñ–ö–¢–Ü–í –û–°–í–Ü–¢–ù–¨–û–á –î–Ü–Ø–õ–¨–ù–û–°–¢–Ü                     ‚ïë" << endl;
    cout << "‚ïë                            –ó–ê–ö–õ–ê–î–ò –í–ò–©–û–á –û–°–í–Ü–¢–ò                           ‚ïë" << endl;
    cout << "‚ïë                                 –í–ê–†–Ü–ê–ù–¢ 9                                 ‚ïë" << endl;
    cout << "‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£" << endl;
    cout << "‚ïë –ö–æ–º–∞–Ω–¥–∞ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫—ñ–≤: –ê–≤—Ä–∞–º–µ–Ω–∫–æ, –ö–æ–≤–∞–ª—å—á—É–∫, –¢–µ—Ä–µ—â–µ–Ω–∫–æ                      ‚ïë" << endl;
    cout << "‚ïë –ü—Ä–µ–¥–º–µ—Ç: –ë–∞–∑–æ–≤—ñ –º–µ—Ç–æ–¥–æ–ª–æ–≥—ñ—ó —Ç–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è                   ‚ïë" << endl;
    cout << "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù" << endl;
}

/**
 * –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
 */
void displayProgramFooter() {
    cout << endl;
    cout << "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó" << endl;
    cout << "‚ïë                    –î–Ø–ö–£–Ñ–ú–û –ó–ê –ö–û–†–ò–°–¢–£–í–ê–ù–ù–Ø!                    ‚ïë" << endl;
    cout << "‚ïë              –ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ —Ä–µ—î—Å—Ç—Ä—É –∑–∞–∫—Ä–∏—Ç–∞                ‚ïë" << endl;
    cout << "‚ïë          –†–æ–∑—Ä–æ–±–Ω–∏–∫–∏: –ê–≤—Ä–∞–º–µ–Ω–∫–æ, –ö–æ–≤–∞–ª—å—á—É–∫, –¢–µ—Ä–µ—â–µ–Ω–∫–æ           ‚ïë" << endl;
    cout << "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù" << endl;
}

/**
 * –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –¥—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
bool confirmAction(const string& message) {
    char response;
    cout << "‚ùì " << message << " (y/n): ";
    cin >> response;
    return (response == 'y' || response == 'Y');
}

// –†–µ–∞–ª—ñ–∑–∞—Ü—ñ—è –¥–æ–ø–æ–º—ñ–∂–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π

/**
 * –ó–≤—ñ–ª—å–Ω–µ–Ω–Ω—è –ø–∞–º'—è—Ç—ñ –≤—ñ–¥ –≤—Å—å–æ–≥–æ —Ä–µ—î—Å—Ç—Ä—É
 */
void clearRegistry(EducationalInstitution* head) {
    while (head != nullptr) {
        EducationalInstitution* temp = head;
        head = head->next;
        delete temp;
    }
}

/**
 * –ü—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫ –∑–∞–≥–∞–ª—å–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∑–∞–ø–∏—Å—ñ–≤
 */
int getRegistrySize(EducationalInstitution* head) {
    int count = 0;
    EducationalInstitution* current = head;

    while (current != nullptr) {
        count++;
        current = current->next;
    }

    return count;
}

/**
 * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ—Ä–µ–∫—Ç–Ω–æ—Å—Ç—ñ –≤–≤–µ–¥–µ–Ω–∏—Ö –¥–∞–Ω–∏—Ö
 */
bool validateInput(int code, const string& name) {
    if (code <= 0) {
        cout << "‚ùå –ü–æ–º–∏–ª–∫–∞: –∫–æ–¥ –Ñ–î–ï–ë–û –º–∞—î –±—É—Ç–∏ –¥–æ–¥–∞—Ç–Ω—ñ–º —á–∏—Å–ª–æ–º!" << endl;
        return false;
    }

    if (name.empty()) {
        cout << "‚ùå –ü–æ–º–∏–ª–∫–∞: –Ω–∞–∑–≤–∞ –∑–∞–∫–ª–∞–¥—É –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –ø–æ—Ä–æ–∂–Ω—å–æ—é!" << endl;
        return false;
    }

    return true;
}
